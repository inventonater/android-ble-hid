apply plugin: 'com.android.library'

android {
    namespace 'com.example.blehid.plugin'
    compileSdk rootProject.ext.compileSdkVersion
    
    defaultConfig {
        minSdk rootProject.ext.minSdkVersion
        targetSdk rootProject.ext.targetSdkVersion
        
        testInstrumentationRunner rootProject.ext.testInstrumentationRunner
        consumerProguardFiles "consumer-rules.pro"
    }
    
    buildTypes {
        release {
            minifyEnabled false
        }
    }
    
    compileOptions {
        sourceCompatibility rootProject.ext.javaVersion
        targetCompatibility rootProject.ext.javaVersion
    }
    
    packagingOptions {
        exclude 'META-INF/MANIFEST.MF'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        pickFirst 'classes.jar'
        doNotStrip '**/*.so'
    }
}

// Task to copy core classes directly into the unity-plugin module
task copyCoreClasses(type: Copy) {
    from "../core/src/main/java"
    into "src/main/java"
    // Exclude any files that might already exist in unity-plugin
    exclude "**/BuildConfig.java"
}

// Run the copy task before compilation
preBuild.dependsOn copyCoreClasses

// Custom task to copy the AAR to Unity project
task copyToUnity(type: Copy, dependsOn: 'assembleRelease') {
    from "${buildDir}/outputs/aar/unity-plugin-release.aar"
    into "../unity-test/Assets/Plugins/Android"
    rename { String fileName ->
        fileName.replace("unity-plugin-release.aar", "BleHidPlugin.aar")
    }
}

dependencies {
    // Use api instead of implementation to ensure core classes are included
    api project(':core')
    
    testImplementation rootProject.ext.deps.junit
    androidTestImplementation rootProject.ext.deps.androidxTestJunit
    
    // Kotlin dependencies
    implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.8.10'
    
    // Unity classes are provided at runtime
    compileOnly fileTree(dir: '../unity-test/Assets/Plugins/Android', include: ['*.jar'], exclude: ['BleHidPlugin.aar'])
}
